name: CI

on: [ push ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: [ '7.4', '8.0', '8.1' ] # Note: This workflow requires only the LATEST version of PHP
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Install PHP Dependencies
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          extensions: mbstring, intl, curl

      - name: Validate Composer
        run: composer validate

      - name: Get Composer Cache Directory
        # Docs: <https://github.com/actions/cache/blob/master/examples.md#php---composer>
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Restore Composer Cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php }}-composer-

      - name: Install Dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --prefer-dist --no-interaction --no-progress

      # Execution
      - name: Security Advisories
        run: composer require --dev roave/security-advisories:dev-latest

  unit-tests:
    name: Build (${{matrix.php}}, ${{ matrix.os }}, ${{ matrix.stability }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        php: [ '7.4', '8.0', '8.1' ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        stability: [ prefer-lowest, prefer-stable ]

    steps: # General Steps
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        uses: actions/checkout@v2

      # Install PHP Dependencies
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          # PHP Extras
          coverage: none
          extensions: mbstring, intl, curl

      - name: Validate Composer
        run: composer validate

      - name: Get Composer Cache Directory
        # Docs: <https://github.com/actions/cache/blob/master/examples.md#php---composer>
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Restore Composer Cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php }}-composer-

      - name: Install Dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress

      # Execution
      - name: Execute Tests
        run: vendor/bin/phpunit --testdox --verbose --exclude-group integration
